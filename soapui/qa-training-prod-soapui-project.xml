<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="adf92380-6675-4c3c-80f0-87e21a2ed88b" activeEnvironment="Default" name="qa-training-prod" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="882848d9-15a8-40be-83bb-0aec09259ee7" wadlVersion="http://wadl.dev.java.net/2009/02" name="Norad API" type="rest" basePath="/norad" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>Norad API documentation</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
    </con:endpoints>
    <con:resource name="/api/accounts" path="/api/accounts" id="adabd4db-6464-49b4-856d-3658f9a60605">
      <con:settings/>
      <con:parameters/>
      <con:method name="registerUsingPOST" id="2411eddc-43cb-451a-8e62-0068be7e974c" method="POST">
        <con:description>Registers new user.
Register new user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:acc="https://norad-beta.duckdns.org/norad/api/accounts">acc:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:acc="https://norad-beta.duckdns.org/norad/api/accounts">acc:Response</con:element>
        </con:representation>
        <con:request name="Request 1" id="d8dee066-0cbc-4f1a-a49e-f83b4646773f" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/accounts/{uuid}" path="/api/accounts/{uuid}" id="3f0748e3-5ce6-40fa-bcc3-44693dcc64aa">
      <con:settings/>
      <con:parameters/>
      <con:method name="getUserUsingGET" id="21788373-5048-42ea-8c2c-2cd1275531f0" method="GET">
        <con:description>Gets user by uuid
Get user by uuid</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>uuid</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>uuid</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="0bf46b39-d274-4906-b63d-e1b07676055b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/animals" path="/api/animals" id="a8bf25c9-54c7-4096-95a9-a98e8b7166f2">
      <con:settings/>
      <con:parameters/>
      <con:method name="createUsingPOST" id="c20f0ad0-3d44-4df7-8048-79d3e15d1e08" method="POST">
        <con:description>Creates new animal.
Creates animal</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>409</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>401 500</con:status>
          <con:params/>
          <con:element xmlns:anim="https://norad-beta.duckdns.org/norad/api/animals">anim:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:anim="https://norad-beta.duckdns.org/norad/api/animals">anim:Response</con:element>
        </con:representation>
        <con:request name="Request 1" id="c194f327-82e7-4525-b6f0-b49ec8194581" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/animals/{animalUUID}/images/{imageUUID}" path="/api/animals/{animalUUID}/images/{imageUUID}" id="fe157c22-81e8-4082-87b5-29cb5f8d5ed3">
      <con:settings/>
      <con:parameters/>
      <con:method name="downloadImageUsingGET" id="66f43882-bdde-420d-8781-c3816cb134b2" method="GET">
        <con:description>downloadImage</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>animalUUID</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>Animal UUID</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>imageUUID</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>Image UUID</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b867d1f7-e23b-44f2-9d94-45ea39f6a62b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="uploadImageUsingPOST" id="eea3f3de-069f-4519-ba71-9b63446d9ad9" method="POST">
        <con:description>uploadImage</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>animalUUID</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>Animal UUID</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>file</con:name>
            <con:style>QUERY</con:style>
            <con:description>Binary content of the animal picture</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>imageUUID</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>Image UUID</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="919795b4-0bb8-410d-bb0a-9529c002e096" mediaType="multipart/form-data">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/animals/{uuid}" path="/api/animals/{uuid}" id="27316b49-c965-435a-9c65-c392df92150c">
      <con:settings/>
      <con:parameters/>
      <con:method name="getAnimalUsingGET" id="78cdcc42-f79b-4dbf-87fa-2dabf32de3ff" method="GET">
        <con:description>Gets animal by uuid
Get animal by uuid</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>uuid</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>animal UUID</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="e13b0812-d0bf-422c-8266-da4a2cda7352" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="updateStatusUsingPUT" id="bae3b16e-940b-42fb-8284-444390467258" method="PUT">
        <con:description>Gets animal by uuid
Get animal by uuid</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>uuid</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>animal UUID</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="66fb37a7-3a7b-4a2f-998f-3179c43c8c2a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/dictionaries/races" path="/api/dictionaries/races" id="20455e80-8a89-4ed5-a2d4-da4fc0e5a364">
      <con:settings/>
      <con:parameters/>
      <con:method name="getRacesUsingGET" id="0324f6dc-2b58-4c57-97ce-864ca9393e81" method="GET">
        <con:description>Gets all races
Get all races</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>*/*</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>Response</con:element>
        </con:representation>
        <con:request name="Request 1" id="f2ecbfc0-1cb2-4c01-ac88-c81c63e93451" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="c9b914f8-36c4-4709-942d-4c94860c2b17" name="Norad Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="fbfc5f52-8727-404a-8181-b3c22db73e53" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Exercise S_01 - Get all races" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Get all races" id="494bd728-4346-4c51-aa71-baccbb75336e">
        <con:settings/>
        <con:config service="Norad API" resourcePath="/norad/api/dictionaries/races" methodName="getRacesUsingGET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get all races" id="f2ecbfc0-1cb2-4c01-ac88-c81c63e93451" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
            <con:request/>
            <con:originalUri>https://norad-beta.duckdns.org/norad/api/dictionaries/races</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d1972c23-12e0-4f41-b1f9-5f6f934ba8d4" name="Http response is 200">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Count" id="6f7617e0-effb-4f8c-9377-7a3286663a21" name="Should contain 10 races">
              <con:configuration>
                <path>$</path>
                <content>10</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5c7aa6b1-1891-41d0-b84f-43f8fcb6763b" name="Should have 'Kot egzotyczny' on fifth position">
              <con:configuration>
                <path>$.[4].name</path>
                <content>Kot egzotyczny</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="60c1a739-2b6f-4ad0-ac90-6efad5eed996" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Exercise S_02 - Register new user" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Generate unique email" id="c251f64c-888d-49b9-a826-b745ab0cacd2">
        <con:settings/>
        <con:config>
          <script>import org.apache.commons.lang3.RandomStringUtils

String charset = (('A'..'Z') + ('0'..'9')).join()
Integer length = 9
String randomString = RandomStringUtils.random(length, charset.toCharArray())
String value = "mszpiler+" + randomString + "@norad.com"
testRunner.testCase.setPropertyValue("email", value)
log.info value</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Register new user" id="4ddb3e84-5f1e-4954-ba20-8026534526cc">
        <con:settings/>
        <con:config service="Norad API" resourcePath="/norad/api/accounts" methodName="registerUsingPOST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Register new user" id="d8dee066-0cbc-4f1a-a49e-f83b4646773f" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
            <con:request>{
  "email": "${#TestCase#email}",
  "password": "password"
}</con:request>
            <con:originalUri>https://norad-beta.duckdns.org/norad/api/accounts</con:originalUri>
            <con:assertion type="JsonPath Match" id="7e7a0ddc-e383-407f-b085-ca7f74de48f5" name="JsonPath Match">
              <con:configuration>
                <path>$.email</path>
                <content>${#TestCase#email}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="1c218d69-8b32-47a0-b7c0-ca82889b94a5" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.sql.Sql

import java.sql.Driver

def driver = Class.forName('org.postgresql.Driver').newInstance() as Driver

def props = new Properties()
props.setProperty("user", "pkko")
props.setProperty("password", "pkko")

def conn = driver.connect("jdbc:postgresql://norad-beta.duckdns.org:8200/pkko_db", props)
def sql = new Sql(conn)

def testCase = messageExchange.modelItem.testCase
def email = testCase.getPropertyValue("email")
log.info "Email=" + email
try {
    def row = sql.firstRow('select * from norad.users where email = :email', [email: email])
    assert row.email == email
} catch (Exception e) {
    log.info(e.getMessage())
    assert false
}
finally {
    sql.close()
    conn.close()
}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save user UUID in properties" id="09e1ae27-8a55-47d7-9c4b-148009075f06">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def res = context.expand('${Register new user#response}')
slurperresponse = new JsonSlurper().parseText(res)
log.info "userUUID=" + slurperresponse.uuid
testRunner.testCase.testSuite.setPropertyValue("userUUID", slurperresponse.uuid)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>email</con:name>
          <con:value>mszpiler+L0VZ9PYAR@norad.com</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="310535a2-ebe4-4da4-8a58-ba1d9b9419ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Exercise S_03 - Add new animal to new user" searchProperties="true">
      <con:settings/>
      <con:testStep type="calltestcase" name="Run TestCase Register new user" id="3b12f900-ba9d-4612-8b56-1e2ba9285df9">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>60c1a739-2b6f-4ad0-ac90-6efad5eed996</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>email</con:name>
              <con:value>mszpiler+I0WS3UE8X@norad.com</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>email</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Generate random animal name" id="ac565218-f69c-464f-945c-fde7fe2ce9e2">
        <con:settings/>
        <con:config>
          <script>import org.apache.commons.lang3.RandomStringUtils

String charset = (('A'..'Z') + ('0'..'9')).join()
Integer length = 9
String randomString = RandomStringUtils.random(length, charset.toCharArray())
String value = "mszpiler+animal+" + randomString
testRunner.testCase.setPropertyValue("animalName", value)
log.info value</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get races" id="fea4c278-2cde-4041-a5dc-d2e2ad507e1c">
        <con:settings/>
        <con:config service="Norad API" resourcePath="/norad/api/dictionaries/races" methodName="getRacesUsingGET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Get races" id="f2ecbfc0-1cb2-4c01-ac88-c81c63e93451" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
            <con:request/>
            <con:originalUri>https://norad-beta.duckdns.org/norad/api/dictionaries/races</con:originalUri>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Fetch random race" id="cbde94b3-f470-4025-90bb-0959b236c39f">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def res = context.expand('${Get races#response}')
slurperresponse = new JsonSlurper().parseText(res)

Random random = new Random()
def randomIndex = random.nextInt(10)

log.info "raceId=" + slurperresponse[randomIndex].id

testRunner.testCase.setPropertyValue("raceId", "" + slurperresponse[randomIndex].id)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Access Token" id="23e95fd9-a821-46dd-9692-d40457700151">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper
import org.apache.http.HttpResponse
import org.apache.http.NameValuePair
import org.apache.http.client.HttpClient
import org.apache.http.client.entity.UrlEncodedFormEntity
import org.apache.http.client.methods.HttpPost
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.message.BasicNameValuePair
import org.apache.http.util.EntityUtils

def oauthProviderUrl = 'https://norad-beta.duckdns.org/auth/realms/pokakota/protocol/openid-connect/token'
def HttpClient httpClient = new DefaultHttpClient()

def email = testRunner.testCase.testSteps['Run TestCase Register new user'].getPropertyValue('email')

log.info "Email from properties: $email"

def params = [
        scope        : 'openid',
        grant_type   : 'password',
        username     : email,
        password     : 'password',
        client_id    : 'norad',
        client_secret: '0a62d507-181e-4e44-8c75-dca6665b34b2'
]

HttpPost httpPost = new HttpPost(oauthProviderUrl)
List&lt;NameValuePair> postParams = params.collect {
    new BasicNameValuePair(it.key, it.value)
}

httpPost.entity = new UrlEncodedFormEntity(postParams)
HttpResponse response = httpClient.execute(httpPost)


String responseBody = response.entity.content.text
log.info "OAuth response: $responseBody"
EntityUtils.consume(response.entity)

def responseParsed = new JsonSlurper().parseText(responseBody)
def accessToken = responseParsed.access_token;
log.info "Retrieved ACCESS_TOKEN: $accessToken"

testRunner.testCase.setPropertyValue("ACCESS_TOKEN", accessToken)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Create new animal" id="dac8150d-4420-4bf2-addb-7731fc67864a">
        <con:settings/>
        <con:config service="Norad API" resourcePath="/norad/api/animals" methodName="createUsingPOST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create new animal" id="c194f327-82e7-4525-b6f0-b49ec8194581" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#ACCESS_TOKEN}" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
            <con:request>{
  "chipId": 342323423,
  "images": [
    {
      "captureTimestamp": 234827634827634,
      "latitude": 12.323423423,
      "longitude": 52.42342342,
      "mimeType": "image/jpg",
      "originalFilename": "image.jpg"
    }
  ],
  "name": "${#TestCase#animalName}",
  "raceId": "${#TestCase#raceId}",
  "species": "CAT"
}</con:request>
            <con:originalUri>https://norad-beta.duckdns.org/norad/api/animals</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>animalName</con:name>
          <con:value>mszpiler+animal+0GTF3HWY6</con:value>
        </con:property>
        <con:property>
          <con:name>raceId</con:name>
          <con:value>7</con:value>
        </con:property>
        <con:property>
          <con:name>ACCESS_TOKEN</con:name>
          <con:value>eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrU1JOQXpVOThWR25ubU1ObF9qdzBoNUM0Z3JVa1JNRmxqVmE5dzZhLVNJIn0.eyJqdGkiOiIzNzBlY2VjNy03ZmY5LTQ1YmMtYWU4Yy01NzI2OGY3Mjg2YTQiLCJleHAiOjE1NjcwNjY1ODEsIm5iZiI6MCwiaWF0IjoxNTY3MDY2MjgxLCJpc3MiOiJodHRwczovL25vcmFkLWJldGEuZHVja2Rucy5vcmcvYXV0aC9yZWFsbXMvcG9rYWtvdGEiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNTdiMjFlMjQtNzY1MC00OGE1LWFhNGMtNGQxOTc2MTVlYzlmIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9yYWQiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiJkZmIzZGU5Zi00ZjQ4LTQ1ZDktYjgxYS1lY2I2ZmM1MTA0MzEiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJub3JhZCI6eyJyb2xlcyI6WyJwb2tha290YS11c2VyIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJ1c2VyX25hbWUiOiJtc3pwaWxlcitpMHdzM3VlOHhAbm9yYWQuY29tIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibXN6cGlsZXIraTB3czN1ZTh4QG5vcmFkLmNvbSIsImVtYWlsIjoibXN6cGlsZXIraTB3czN1ZTh4QG5vcmFkLmNvbSJ9.omvkpYWTePmvpUhIiSER23G-SsShfvDkTKRG0_PJG-koiXvZ8bSXOgk9jknRy_66U7mkh9FOqZh6IdE_fiFSnV4oyhdLngnAjoAAW_Zt12krC7GGm3z5MozkRbTeOc6xgRye1wWhT6IHWeOIIG_9w1Kw5kqVSIAurUxYJLZ1_pxcll82ZWOLTU0Ppxj8oDauvjPD7mTVF_0OMYsicbnCfBVc2Zz2n0FKrcBvMAMk2lYAr9aTszK0SJbJdpgYEnaaYkh-7IjtTLq7DkTvdEdJ_2a2M4Io0ds6fxhrkVc0oWOy7F6CYRnJ2j6hsKWj6YfI9xxGwFPTdZfb7feinIzsjQ</con:value>
        </con:property>
      </con:properties>
    </con:testCase>
    <con:testCase id="e0a06efa-183c-4040-a229-72972cb3e0bf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Extra 1 - OAuth" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Create new animal - manual retrieve Access Token" id="601350b2-7ed3-4e5b-83c3-f952b0d8993b">
        <con:settings/>
        <con:config service="Norad API" resourcePath="/norad/api/animals" methodName="createUsingPOST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Create new animal" id="c194f327-82e7-4525-b6f0-b49ec8194581" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://norad-beta.duckdns.org</con:endpoint>
            <con:request>{
  "chipId": 342323423,
  "images": [
    {
      "captureTimestamp": 234827634827634,
      "latitude": 12.323423423,
      "longitude": 52.42342342,
      "mimeType": "image/jpg",
      "originalFilename": "image.jpg"
    }
  ],
  "name": "${#TestCase#animalName}",
  "raceId": "${#TestCase#raceId}",
  "species": "CAT"
}</con:request>
            <con:originalUri>https://norad-beta.duckdns.org/norad/api/animals</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>Profile 1</con:selectedAuthProfile>
              <con:authType>OAuth 2.0</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>userUUID</con:name>
        <con:value>57b21e24-7650-48a5-aa4c-4d197615ec9f</con:value>
      </con:property>
    </con:properties>
  </con:testSuite>
  <con:properties/>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer>
    <con:oAuth2Profile>
      <con:name>Profile 1</con:name>
      <con:clientID>norad</con:clientID>
      <con:clientSecret>0a62d507-181e-4e44-8c75-dca6665b34b2</con:clientSecret>
      <con:authorizationURI>https://norad-beta.duckdns.org/auth/realms/pokakota/protocol/openid-connect/auth?client_id=norad&amp;&amp;response_mode=fragment&amp;response_type=code&amp;login=true&amp;redirect_uri=http://www.weter.pl</con:authorizationURI>
      <con:accessTokenURI>https://norad-beta.duckdns.org/auth/realms/pokakota/protocol/openid-connect/token</con:accessTokenURI>
      <con:redirectURI>http://www.weter.pl</con:redirectURI>
      <con:accessToken>eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJrU1JOQXpVOThWR25ubU1ObF9qdzBoNUM0Z3JVa1JNRmxqVmE5dzZhLVNJIn0.eyJqdGkiOiIxODQwOGZjNy0wM2Q5LTQ5MTItYTAxOC01M2QxYTQ3YzhhNjQiLCJleHAiOjE1NjcwNjI3NzgsIm5iZiI6MCwiaWF0IjoxNTY3MDYyNDc4LCJpc3MiOiJodHRwczovL25vcmFkLWJldGEuZHVja2Rucy5vcmcvYXV0aC9yZWFsbXMvcG9rYWtvdGEiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiM2E5MWEyMmMtMzcwNS00NzNkLWJmMDUtZWYxMjkwMThlMGJiIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibm9yYWQiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiI4MzgwZGE2Ny1iNmRmLTQzZTEtYmI0ZS02YzI0OWZiZTMyYzgiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJub3JhZCI6eyJyb2xlcyI6WyJwb2tha290YS11c2VyIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJ1c2VyX25hbWUiOiJtc3pwaWxlcitqdHh2eXM2anhAbm9yYWQuY29tIiwicHJlZmVycmVkX3VzZXJuYW1lIjoibXN6cGlsZXIranR4dnlzNmp4QG5vcmFkLmNvbSIsImVtYWlsIjoibXN6cGlsZXIranR4dnlzNmp4QG5vcmFkLmNvbSJ9.o9YfwAEMdO1DWLEa_7GIo1BpvhFcR1uDqHQpM8cfD7Jc8GQei1n9mQ7-0kFQMdm9SvCvLkKv2Qg9S0OylL1MSSkz11go3Hn0_Trtv3cAe2iyyZKD3DSmFCZXDhyWTbtSW-ElnjKvug8aBy1h4PQjSAmPg-GrwNMosak3N38PTPHnkmJfn_nvaxjM_z2Zrie-8yLBMoLRs1OjrAVzz16OJJNvROH6ITMolw-uTEavwIL4yN3f9manYQAZWDWrJh8u13RiHlqNDmh-hXLJqbbw52j9H9N2113L92-vQMMQ1JnMwS5CsnYvsWjryJ3QjzekRq_XGINXDFcPyeHehhoF0Q</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:oAuth2Flow>RESOURCE_OWNER_PASSWORD_CREDENTIALS</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:refreshToken>eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI2ZmNiMDFkZi1iYjM5LTQ3OTEtODA1Yy04MTY4MGY0MjJlMzMifQ.eyJqdGkiOiI0MWNlYzZhMy1mN2JmLTQ3ZmYtYmU2ZS0xZTljZWYwMTcyYmUiLCJleHAiOjE1NjcwNjQyNzgsIm5iZiI6MCwiaWF0IjoxNTY3MDYyNDc4LCJpc3MiOiJodHRwczovL25vcmFkLWJldGEuZHVja2Rucy5vcmcvYXV0aC9yZWFsbXMvcG9rYWtvdGEiLCJhdWQiOiJodHRwczovL25vcmFkLWJldGEuZHVja2Rucy5vcmcvYXV0aC9yZWFsbXMvcG9rYWtvdGEiLCJzdWIiOiIzYTkxYTIyYy0zNzA1LTQ3M2QtYmYwNS1lZjEyOTAxOGUwYmIiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoibm9yYWQiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiI4MzgwZGE2Ny1iNmRmLTQzZTEtYmI0ZS02YzI0OWZiZTMyYzgiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7Im5vcmFkIjp7InJvbGVzIjpbInBva2Frb3RhLXVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwifQ.9Pf1Vkr-a3GM3sa7jbJlK-k5uA_qjg6LmkckhnbozOw</con:refreshToken>
      <con:scope>openid</con:scope>
      <con:accessTokenStatus>RETRIEVED_FROM_SERVER</con:accessTokenStatus>
      <con:accessTokenStartingStatus>RETRIEVED_FROM_SERVER</con:accessTokenStartingStatus>
      <con:accessTokenExpirationTime>300</con:accessTokenExpirationTime>
      <con:accessTokenIssuedTime>1567062476</con:accessTokenIssuedTime>
      <con:javaScripts>
        <con:entry/>
        <con:entry/>
      </con:javaScripts>
      <con:manualAccessTokenExpirationTime/>
      <con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit>
      <con:resourceOwnerName>mszpiler+JTXVYS6JX@norad.com</con:resourceOwnerName>
      <con:resourceOwnerPassword>password</con:resourceOwnerPassword>
    </con:oAuth2Profile>
  </con:oAuth2ProfileContainer>
  <con:oAuth1ProfileContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>
