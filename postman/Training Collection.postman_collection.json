{
	"info": {
		"_postman_id": "a5b39f09-7be8-4382-98c9-a64dc1220f29",
		"name": "Training Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Exercise P_1 - Get all races",
			"item": [
				{
					"name": "Get all races",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "190388df-da18-4ddb-a5f1-ef5a3ec366c8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Size is equal to 10\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(10);",
									"});",
									"",
									"pm.test(\"Fifth position is Kot egzotyczny\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[4].name).to.eql(\"Kot egzotyczny\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/dictionaries/races",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"dictionaries",
								"races"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise P_2 - Register new user",
			"item": [
				{
					"name": "Register new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8b35928e-abad-4df6-a89b-2ff782cb8514",
								"exec": [
									"var randomString = Math.random().toString(36).substring(7);",
									"",
									"console.log(\"Random string is \" + randomString);",
									"",
									"var randomEmail = 'mszpiler+postman+'+randomString+'@norad.com';",
									"",
									"pm.environment.set(\"USER_EMAIL\", randomEmail);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2f31251d-cfe1-443c-803f-71a3e1a7b25a",
								"exec": [
									"pm.test(\"Check if email the same\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"USER_EMAIL\"));",
									"    ",
									"    //required for point 5.C)",
									"    pm.environment.set(\"USER_UUID\", jsonData.uuid);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{USER_EMAIL}}\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c5bec55e-f953-45f9-81d1-000d0b6dec5b",
								"exec": [
									"let tokenUrl = pm.environment.get(\"API_HOST\") + pm.environment.get(\"API_PORT\") + pm.environment.get(\"AUTH_TOKEN_PATH\");",
									"let clientId = pm.environment.get(\"AUTH_CLIENT_ID\");",
									"let clientSecret = pm.environment.get(\"AUTH_SECRET\");",
									"let scope = pm.environment.get(\"AUTH_SCOPE\");",
									"let grantType = 'password';",
									"let userName = pm.environment.get(\"USER_EMAIL\");",
									"let password = 'password';",
									"",
									"console.log('tokenUrl: ' + tokenUrl);",
									"",
									"let getTokenRequest = {",
									"    method: 'POST',",
									"    header: {",
									"        'Accept': 'application/json',",
									"        'Content-Type': 'application/x-www-form-urlencoded'",
									"    },",
									"    url: tokenUrl,",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: 'grant_type', value: grantType, disabled: false },",
									"            { key: 'username', value: userName, disabled: false },",
									"            { key: 'password', value: password, disabled: false },",
									"            { key: 'scope', value: scope, disabled: false },",
									"            { key: 'client_id', value: clientId, disabled: false },",
									"            { key: 'client_secret', value: clientSecret, disabled: false }",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(getTokenRequest, (err, response) => {",
									"    let jsonResponse = response.json(),",
									"        newAccessToken = jsonResponse.access_token;",
									"",
									"    console.log({ err, jsonResponse, newAccessToken })",
									"",
									"    pm.environment.set('ACCESS_TOKEN', newAccessToken);",
									"});",
									"",
									"console.log('ACCESS_TOKEN: ' + pm.environment.get('ACCESS_TOKEN'));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "28af1a00-e349-4919-b349-77689b30d079",
								"exec": [
									"pm.test(\"Should have status 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Should contain UUID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.uuid.length).to.above(0);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"USER_UUID\", jsonData['uuid']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts/{{USER_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"accounts",
								"{{USER_UUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user and test if exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23eeede9-2b77-48f5-ab88-4780ca2d3fbe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts/{{USER_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"accounts",
								"{{USER_UUID}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise P_3 - Add new animal for new user",
			"item": [
				{
					"name": "Step 1 - Register new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8b35928e-abad-4df6-a89b-2ff782cb8514",
								"exec": [
									"var randomString = Math.random().toString(36).substring(7);",
									"",
									"console.log(\"Random string is \" + randomString);",
									"",
									"var randomEmail = 'mszpiler+postman+'+randomString+'@norad.com';",
									"",
									"pm.environment.set(\"USER_EMAIL\", randomEmail);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2f31251d-cfe1-443c-803f-71a3e1a7b25a",
								"exec": [
									"pm.test(\"Check if email the same\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"USER_EMAIL\"));",
									"    //required for point 5.C)",
									"    pm.environment.set(\"USER_UUID\", jsonData.uuid);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{USER_EMAIL}}\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2 - Get Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c5bec55e-f953-45f9-81d1-000d0b6dec5b",
								"exec": [
									"let tokenUrl = pm.environment.get(\"API_HOST\") + pm.environment.get(\"API_PORT\") + pm.environment.get(\"AUTH_TOKEN_PATH\");",
									"let clientId = pm.environment.get(\"AUTH_CLIENT_ID\");",
									"let clientSecret = pm.environment.get(\"AUTH_SECRET\");",
									"let scope = pm.environment.get(\"AUTH_SCOPE\");",
									"let grantType = 'password';",
									"let userName = pm.environment.get(\"USER_EMAIL\");",
									"let password = 'password';",
									"",
									"console.log('tokenUrl: ' + tokenUrl);",
									"",
									"let getTokenRequest = {",
									"    method: 'POST',",
									"    header: {",
									"        'Accept': 'application/json',",
									"        'Content-Type': 'application/x-www-form-urlencoded'",
									"    },",
									"    url: tokenUrl,",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: 'grant_type', value: grantType, disabled: false },",
									"            { key: 'username', value: userName, disabled: false },",
									"            { key: 'password', value: password, disabled: false },",
									"            { key: 'scope', value: scope, disabled: false },",
									"            { key: 'client_id', value: clientId, disabled: false },",
									"            { key: 'client_secret', value: clientSecret, disabled: false }",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(getTokenRequest, (err, response) => {",
									"    let jsonResponse = response.json(),",
									"        newAccessToken = jsonResponse.access_token;",
									"",
									"    console.log({ err, jsonResponse, newAccessToken })",
									"",
									"    pm.environment.set('ACCESS_TOKEN', newAccessToken);",
									"});",
									"",
									"console.log('ACCESS_TOKEN: ' + pm.environment.get('ACCESS_TOKEN'));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "28af1a00-e349-4919-b349-77689b30d079",
								"exec": [
									"pm.test(\"Should have status 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Should contain UUID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.uuid.length).to.above(0);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"USER_UUID\", jsonData['uuid']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts/{{USER_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"accounts",
								"{{USER_UUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3 - Get all races",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "190388df-da18-4ddb-a5f1-ef5a3ec366c8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Size is equal to 10\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(10);",
									"});",
									"",
									"pm.test(\"Fifth position is Kot egzotyczny\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[4].name).to.eql(\"Kot egzotyczny\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var randomNumber = Math.floor((Math.random() * 10) + 1);",
									"var selectedRaceId =  jsonData[randomNumber].id",
									"pm.environment.set(\"RACE_ID\", selectedRaceId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/dictionaries/races",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"dictionaries",
								"races"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 4 - Create new animal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "527571c4-c949-4da2-95a5-a1dfd75f563b",
								"exec": [
									"var randomString = Math.random().toString(36).substring(7);",
									"",
									"var randomAnimalName = 'mszpiler+postman+animal+'+randomString;",
									"",
									"pm.environment.set(\"ANIMAL_NAME\", randomAnimalName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fd6d9de4-913d-4555-95d7-ff6ad83fb24f",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"ANIMAL_UUID\", jsonData.uuid);",
									"",
									"",
									"pm.test(\"Should contain 3 images in response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.images.length).to.eql(3);",
									"});",
									"",
									"pm.test(\"Every image uuid should not be null\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    for (i = 0; i < jsonData.images.length; i++) {",
									"        pm.expect(jsonData.images[i].uuid).not.eql(null);    ",
									"    }",
									"    ",
									"});",
									"",
									"pm.environment.set(\"FIRST_IMAGE_UUID\", jsonData.images[0].uuid);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"chipId\": 342323423,\n  \"images\": [\n    {\n      \"captureTimestamp\": 234827634827634,\n      \"latitude\": 12.323423423,\n      \"longitude\": 52.42342342,\n      \"mimeType\": \"image/jpg\",\n      \"originalFilename\": \"image1.jpg\"\n    },\n    {\n      \"captureTimestamp\": 234827634827634,\n      \"latitude\": 12.323423423,\n      \"longitude\": 52.42342342,\n      \"mimeType\": \"image/jpg\",\n      \"originalFilename\": \"image2.jpg\"\n    },\n    {\n      \"captureTimestamp\": 234827634827634,\n      \"latitude\": 12.323423423,\n      \"longitude\": 52.42342342,\n      \"mimeType\": \"image/jpg\",\n      \"originalFilename\": \"image3.jpg\"\n    }\n  ],\n  \"name\": \"{{ANIMAL_NAME}}\",\n  \"raceId\": \"{{RACE_ID}}\",\n  \"species\": \"CAT\"\n}"
						},
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/animals",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"animals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 5 - Get animal details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e414395-9fd4-45aa-bb6f-5bfa10db9d35",
								"exec": [
									"pm.test(\"Check if races match\", function () {",
									"    var jsonData = pm.response.json();",
									"    var envRaceId = pm.environment.get(\"RACE_ID\"); ",
									"    pm.expect(jsonData.raceId).to.eql(envRaceId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/animals/{{ANIMAL_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"animals",
								"{{ANIMAL_UUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 6 - Get user details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2ab6e27-d3aa-4e8d-bc29-8d0499358a1b",
								"exec": [
									"pm.test(\"Check if users match\", function () {",
									"    var jsonData = pm.response.json();",
									"    var envUserUuid = pm.environment.get(\"USER_UUID\"); ",
									"    pm.expect(jsonData.uuid).to.eql(envUserUuid);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts/{{USER_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"accounts",
								"{{USER_UUID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise P_4 - Upload file",
			"item": [
				{
					"name": "Upload file",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "example.jpg"
								}
							]
						},
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/animals/{{ANIMAL_UUID}}/images/{{FIRST_IMAGE_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"animals",
								"{{ANIMAL_UUID}}",
								"images",
								"{{FIRST_IMAGE_UUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9227a9a-f06a-42ac-8aad-a2907b4f170d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_HOST}}{{API_PORT}}/norad/api/animals/{{ANIMAL_UUID}}/images/{{FIRST_IMAGE_UUID}}",
							"host": [
								"{{API_HOST}}{{API_PORT}}"
							],
							"path": [
								"norad",
								"api",
								"animals",
								"{{ANIMAL_UUID}}",
								"images",
								"{{FIRST_IMAGE_UUID}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise P_5 - Add many animals from CSV file",
			"item": [
				{
					"name": "Register new user",
					"item": [
						{
							"name": "Register new user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f5dab679-3197-444f-b033-245cd5183e7d",
										"exec": [
											"var randomString = Math.random().toString(36).substring(7);",
											"console.log(\"Random string is \" + randomString);",
											"var randomEmail = 'mszpiler+postman+' + randomString + '@norad.com';",
											"pm.environment.set(\"USER_EMAIL\", randomEmail);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7c9f97fd-9d41-464d-b70b-0f992d64459a",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"EX5_USER_UUID\", jsonData.uuid);",
											"console.log(\"EX5_USER_UUID=\"+jsonData.uuid)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{USER_EMAIL}}\",\n    \"password\": \"password\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts",
									"host": [
										"{{API_HOST}}{{API_PORT}}"
									],
									"path": [
										"norad",
										"api",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5bec55e-f953-45f9-81d1-000d0b6dec5b",
										"exec": [
											"let tokenUrl = pm.environment.get(\"API_HOST\") + pm.environment.get(\"API_PORT\") + pm.environment.get(\"AUTH_TOKEN_PATH\");",
											"let clientId = pm.environment.get(\"AUTH_CLIENT_ID\");",
											"let clientSecret = pm.environment.get(\"AUTH_SECRET\");",
											"let scope = pm.environment.get(\"AUTH_SCOPE\");",
											"let grantType = 'password';",
											"let userName = pm.environment.get(\"USER_EMAIL\");",
											"let password = 'password';",
											"",
											"console.log('tokenUrl: ' + tokenUrl);",
											"",
											"let getTokenRequest = {",
											"    method: 'POST',",
											"    header: {",
											"        'Accept': 'application/json',",
											"        'Content-Type': 'application/x-www-form-urlencoded'",
											"    },",
											"    url: tokenUrl,",
											"    body: {",
											"        mode: 'urlencoded',",
											"        urlencoded: [",
											"            { key: 'grant_type', value: grantType, disabled: false },",
											"            { key: 'username', value: userName, disabled: false },",
											"            { key: 'password', value: password, disabled: false },",
											"            { key: 'scope', value: scope, disabled: false },",
											"            { key: 'client_id', value: clientId, disabled: false },",
											"            { key: 'client_secret', value: clientSecret, disabled: false }",
											"        ]",
											"    }",
											"};",
											"",
											"pm.sendRequest(getTokenRequest, (err, response) => {",
											"    let jsonResponse = response.json(),",
											"        newAccessToken = jsonResponse.access_token;",
											"",
											"    console.log({ err, jsonResponse, newAccessToken })",
											"",
											"    pm.environment.set('ACCESS_TOKEN', newAccessToken);",
											"});",
											"",
											"console.log('ACCESS_TOKEN: ' + pm.environment.get('ACCESS_TOKEN'));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "28af1a00-e349-4919-b349-77689b30d079",
										"exec": [
											"pm.test(\"Should have status 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Should contain UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.uuid.length).to.above(0);",
											"});",
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"USER_UUID\", jsonData['uuid']);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{ACCESS_TOKEN}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{API_HOST}}{{API_PORT}}/norad/api/accounts/{{EX5_USER_UUID}}",
									"host": [
										"{{API_HOST}}{{API_PORT}}"
									],
									"path": [
										"norad",
										"api",
										"accounts",
										"{{EX5_USER_UUID}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create many animals",
					"item": [
						{
							"name": "Create new animal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9723d5b1-dcea-48e7-8c90-d2e760bc2399",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chipId\": 342323423,\n  \"images\": [\n    {\n      \"captureTimestamp\": 234827634827634,\n      \"latitude\": 12.323423423,\n      \"longitude\": 52.42342342,\n      \"mimeType\": \"image/jpg\",\n      \"originalFilename\": \"image1.jpg\"\n    },\n    {\n      \"captureTimestamp\": 234827634827634,\n      \"latitude\": 12.323423423,\n      \"longitude\": 52.42342342,\n      \"mimeType\": \"image/jpg\",\n      \"originalFilename\": \"image2.jpg\"\n    },\n    {\n      \"captureTimestamp\": 234827634827634,\n      \"latitude\": 12.323423423,\n      \"longitude\": 52.42342342,\n      \"mimeType\": \"image/jpg\",\n      \"originalFilename\": \"image3.jpg\"\n    }\n  ],\n  \"name\": \"{{name}}\",\n  \"raceId\": \"{{raceId}}\",\n  \"species\": \"CAT\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}{{API_PORT}}/norad/api/animals",
									"host": [
										"{{API_HOST}}{{API_PORT}}"
									],
									"path": [
										"norad",
										"api",
										"animals"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}